p1= 1320848382168869261513462011193279779785913318247289889345531330598413595414189648054974179
ct= 44434291492944233127111076558827481307543228524106095803248118522157238162522475
n= 11078274365308478450390349662673015629946891838334449295526557612423682836218554101248489955757104225084458627621341308854714989885464790025986874582187893521984662548870221575021865278417502965484885528605376974504926132675733486359230513218663559409754677150031914643835256284792030926640728502940959702980822875225841147685570310119828007386967639955418829694971204053639026432575592935022700767036230432122896192119931344779332152430224280726105605019097658380180826914481526390159473785150116169639473036776778160123758156204081126185261361702397399208966807251691632012271915835846810379112880902342314830758171
c= 7981129604605208232532599966846704622230118309753775657035517332541424979073895042108092273458909187955174781999190258594621090580701149590929098433678867990503767353122425123863071539743577274139756626452255252765451739014212928779608897651047870981976761982854926036115048385513847623501366841291107550632468634062159738277549772593552391024124522354248225077925509938182262064221039245943852940754032224911186833804186728602482012323220644957732631135322916772322415231875006346124763877738217268626811785509055883889487746669457829532686093051120219854549548773540937105274034546459492745443620509071353894673295

mod=pow(2,265)
# p0=n*invert(q0,mod)%mod
pbar=(p1<<724)+ct
# sage
PR.<x> = PolynomialRing(Zmod(n)). # 生成一个以x为符号的一元多项式环。
for i in range(32):
    f=pbar+x*mod*32        #v定义求解的函数
    f=f.monic()
    pp=f.small_roots(X=2^454,beta=0.4) # 多项式小值根求解及因子分解,X：表示求解根的上界
    if(pp):
        break
    pbar+=mod
assert pp
p=pbar+pp[0]*32*mod

q=n//Integer(p)
e=65537
phi=(p-1)*(q-1)
# d = gmpy2.invert(e, (p - 1) *(q - 1))
# m = powmod(c, d, n)
d = inverse_mod(e, phi)
m = pow(c, d, n)
print(m)