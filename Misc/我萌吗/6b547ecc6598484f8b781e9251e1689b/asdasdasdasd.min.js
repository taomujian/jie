function encode(e, r, n, a, i) {
	for (var o = [], t = [], f = fs.readFileSync(r), g = fs.readFileSync(n), s = new pp(f), d = new pp(g), h = s.size(), c = h.width * h.height, l = (new Buffer(4 * c), 0); l < e.length; l++)
		for (v = Math.floor(c * Math.random());;) {
			if (!o.includes(v)) {
				o.push(v), t.push(l);
				break
			}
			v = (v + 1) % Math.floor(c)
		}
	for (l = 0; l < h.height; l++)
		for (var p = 0; p < h.width; p++) {
			var u = o.findIndex(function(e) {
					return e === l * h.width + p
				}),
				b = t[u];
			if (-1 !== u) {
				var v = s.get(p, l);
				100 * Math.random() > 50 && !o.includes(p * h.width + l) ? (s.set(p, l, {
					r: 255 - v.r,
					g: 255 - v.g,
					b: 255 - v.b,
					a: v.a
				}), d.set(l, p, {
					r: v.r,
					g: b,
					b: e.charCodeAt(b)
				})) : (s.set(p, l, {
					r: v.r,
					g: b,
					b: 255 - v.b,
					a: v.a
				}), d.set(p, l, {
					r: v.r,
					g: e.charCodeAt(b),
					b: v.b,
					a: v.a
				}))
			}
		}
	s.save(a, function(e) {
		console.log(e)
	}), d.save(i, function(e) {
		console.log(e)
	})
}
var pp = require("png-img"),
	fs = require("fs"),
	flag = "5L2g5LiN5Lya5Lul5Li66L+Z5piv562U5qGI5ZCnPw==";
encode(flag, "1.png", "ks.png", "dest.png", "key.png");